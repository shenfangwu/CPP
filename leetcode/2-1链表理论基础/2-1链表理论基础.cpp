// 2-1链表理论基础
// 1链表是啥 2链表类型 3链表存储方式 4链表定义 5链表操作
#include <iostream>
//4 单链表的定义
struct ListNode {
    int val;  // 节点上存储的元素
    ListNode* next;  // 指向下一个节点的指针
    ListNode(int x) : val(x), next(NULL) {}  // 节点的构造函数
};

int main()
{
    //1 链表是一种通过指针串联在一起的线性结构，每一个节点由两部分组成，
    // 一个是数据域一个是指针域（存放指向下一个节点的指针），最后一个节点的指针域指向null（空指针的意思）。
    // 链表的入口节点称为链表的头结点也就是head。
    //2 单链表 双链表 循环链表
    //3 链表在内存中不是连续分布的，通过指针域的指针链接在内存的各个节点；
    // 所以链表的节点在内存中不是连续分布的，而是散乱分布在内存某地址上，分配机制取决于操作系统的内存管理
    //5 链表操作：添加节点、删除节点
}
