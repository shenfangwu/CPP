// 3-1哈希表理论基础
#include <iostream>

int main()
{
    //1 哈希表是啥
    /*
    散列表（Hash table，也叫哈希表），是根据键（Key）而直接访问在内存存储位置的数据结构。
    也就是说，它通过计算一个关于键值的函数，将所需查询的数据映射到表中一个位置来访问记录，这加快了查找速度。
    这个映射函数称做散列函数，存放记录的数组称做散列表。
    */

    //2 哈希表能解决什么问题
    /*一般哈希表都是用来快速判断一个元素是否出现集合里。时间复杂度可以达到O(1)*/

    //3 哈希函数
    // 哈希函数就是将键值映射为存储位置的函数，简单说就是根据Key的值计算出Entry位置的函数。
    //4 哈希冲突
    /*
    当两个不一样的key值 通过 哈希函数 计算，得到的Entry位置下标一样的时候就成为哈希冲突。
    即key1 != key2，Entry(key1) = Entry(key2)。
        */
    //5 如何解决哈希冲突：拉链法、线性探测法
    //6 常用的哈希表结构：数组、集合(set)、映射(map)
}

